

一、匹配

	\b  代表单词的开头或结尾		\bhe\b  只会匹配he
	\d  匹配任意的数字				0\d  匹配01-09
			\d{2}  表示数字必须连续匹配两次		00-99
	\s  匹配任意的空白符，包括空格，制表符(Tab)，换行符，中文全角空格
	\w  匹配字母或数字或下划线或汉字。
	.  匹配除换行符以外的任意字符 
	^  匹配字符串的开始 
	$ 匹配字符串的结束 				^\d{5,12}$		必须为5位到12位数字时
	
	字符转义 \
	www\.unibetter\.com  匹配www.unibetter.com
	c:\\windows  匹配c:\windows
	2\^8  匹配2^8(通常这是2的8次方的书写方式)。
	
	重复
	*  重复零次或更多次 
	+  重复一次或更多次 
	?  重复零次或一次 
	{n}  重复n次 
	{n,}  重复n次或更多次 
	{n,m}  重复n到m次 
	
	
二、 反义

	\W  匹配任意不是字母，数字，下划线，汉字的字符 
	\S  匹配任意不是空白符的字符 
	\D  匹配任意非数字的字符 
	\B  匹配不是单词开头或结束的位置 
	[^x]  匹配除了x以外的任意字符 
	[^aeiou]  匹配除了aeiou这几个字母以外的任意字符 

	| 替换，并列
	\(0\d{2}\)[- ]?\d{8}|0\d{2}[- ]?\d{8}这个表达式匹配3位区号的电话号码，
		其中区号可以用小括号括起来，也可以不用，区号与本地号间可以用连字号或空格间隔，也可以没有间隔
	
	用小括号来指定子表达式(也叫做分组)
	(\d{1,3}\.){3}\d{1,3}是一个简单的IP地址匹配表达式。
		分析它：\d{1,3}匹配1到3位的数字，(\d{1,3}\.}{3}匹配三位数字加上一个英文句号(这个整体也就是这个分组)重复3次，最后再加上一个一到三位的数字(\d{1,3})
	((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)	ip地址解析，完备版
	
	
	后向引用
		用于重复搜索前面某个分组匹配的文本。例如，\1代表分组1匹配的文本
	\b(\w+)\b\s+\1\b可以用来匹配重复的单词，像go go, kitty kitty。
		首先是一个单词，也就是单词开始处和结束处之间的多于一个的字母或数字(\b(\w+)\b)，然后是1个或几个空白符(\s+，最后是前面匹配的那个单词(\1)。
		\b(?<Word>\w+)\b\s*\k<Word>\b。		要反向引用这个分组捕获的内容，你可以使用\k<Word>
	(exp)  匹配exp,并捕获文本到自动命名的组里 
	(?<name>exp)  匹配exp,并捕获文本到名称为name的组里，也可以写成(?'name'exp) 
	(?=exp)  匹配exp前面的位置 		零宽先行断言	\b\w+(?=ing\b)，匹配以ing结尾的单词的前面部分(除了ing以外的部分)
	(?<=exp)  匹配exp后面的位置 	零宽后行断言	(?<=\bre)\w+\b会匹配以re开头的单词的后半部分(除了re以外的部分)
	(?!exp)  匹配后面跟的不是exp的位置 
	(?<!exp)  匹配前面不是exp的位置 
	

	(?!exp)，零宽负向先行断言 只会匹配后缀exp不存在的位置。		\d{3}(?!\d)匹配三位数字，而且这三位数字的后面不能是数字。
	(?<!exp),零宽负向后行断言 来查找前缀exp不存在的位置：		(?<![a-z])\d{7}匹配前面不是小写字母的七位数字
	
神级demo
.*(.)(.*\\1).*			

.：代表任意一个字符
.*：代表任意一个字符后面有0个或多个字符
(.)：选择字符中任意一个字符进行复制 和后面的(.*\\1)结合进行判断是否后面存在一个字符与它相同
(.)(.*\\1)：匹配案例 a*a（即首尾相同的abcsa）
(.)(.*\\1).*：匹配案例 a*a*
.*(.)(.*\\1)：匹配案例 *a*a
.*(.)(.*\\1).*：匹配案例 *a*a*
	
三、 懒惰匹配

	*?  重复任意次，但尽可能少重复 
	+?  重复1次或更多次，但尽可能少重复 
	??  重复0次或1次，但尽可能少重复 
	{n,m}?  重复n到m次，但尽可能少重复 
	{n,}?  重复n次以上，但尽可能少重复 

	
四 、 
特别字符			 说明 
	$ 			匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 '\n' 或 '\r'。要匹配 $ 字符本身，请使用 \$。 
	( ) 		标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 \( 和 \)。 
	* 			匹配前面的子表达式零次或多次。要匹配 * 字符，请使用 \*。 
	+ 			匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 \+。 
	. 			匹配除换行符 \n之外的任何单字符。要匹配 .，请使用 \。 
	[ 			标记一个中括号表达式的开始。要匹配 [，请使用 \[。 
	? 			匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。要匹配 ? 字符，请使用 \?。 
	\ 			将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， 'n' 匹配字符 'n'。'\n' 匹配换行符。序列 '\\' 匹配 "\"，而 '\(' 则匹配 "("。 
	^ 			匹配输入字符串的开始位置，除非在方括号表达式中使用，此时它表示不接受该字符集合。要匹配 ^ 字符本身，请使用 \^。 
	{ 			标记限定符表达式的开始。要匹配 {，请使用 \{。 
	| 			指明两项之间的一个选择。要匹配 |，请使用 \|。 

		